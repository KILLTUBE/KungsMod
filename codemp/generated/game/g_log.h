void G_LogWeaponInit();
void G_LogWeaponPickup( int client, int weaponid );
void G_LogWeaponFire( int client, int weaponid );
void G_LogWeaponDamage( int client, int mod, int amount );
void G_LogWeaponKill( int client, int mod );
void G_LogWeaponFrag( int attacker, int deadguy );
void G_LogWeaponDeath( int client, int weaponid );
void G_LogWeaponPowerup( int client, int powerupid );
void G_LogWeaponItem( int client, int itemid );
void G_LogWeaponOutput();
qboolean CalculateEfficiency( gentity_t *ent, int *efficiency );
qboolean CalculateSharpshooter( gentity_t *ent, int *frags );
qboolean CalculateUntouchable( gentity_t *ent );
qboolean CalculateLogistics( gentity_t *ent, int *stuffUsed );
qboolean CalculateTactician( gentity_t *ent, int *kills );
qboolean CalculateDemolitionist( gentity_t *ent, int *kills );
int CalculateStreak( gentity_t *ent );
qboolean CalculateTeamMVP( gentity_t *ent );
qboolean CalculateTeamDefender( gentity_t *ent );
qboolean CalculateTeamWarrior( gentity_t *ent );
qboolean CalculateTeamCarrier( gentity_t *ent );
qboolean CalculateTeamInterceptor( gentity_t *ent );
qboolean CalculateTeamRedShirt( gentity_t *ent );
int CalculateTeamAward( gentity_t *ent );
qboolean CalculateSection31Award( gentity_t *ent );
void CalculateAwards( gentity_t *ent, char *msg );
int GetMaxDeathsForClient( int nClient );
int GetMaxKillsForClient( int nClient );
int GetFavoriteTargetForClient( int nClient );
int GetWorstEnemyForClient( int nClient );
int GetFavoriteWeaponForClient( int nClient );
void G_ClearClientLog( int client );

char *GetFlagStr( int flags );
void G_TestLine( vec3_t start, vec3_t end, int color, int time );
void BotWaypointRender();
void TransferWPData( int from, int to );
void CreateNewWP( vec3_t origin, int flags );
void CreateNewWP_FromObject( wpobject_t *wp );
void RemoveWP();
void RemoveAllWP();
void RemoveWP_InTrail( int afterindex );
int CreateNewWP_InTrail( vec3_t origin, int flags, int afterindex );
int CreateNewWP_InsertUnder( vec3_t origin, int flags, int afterindex );
void TeleportToWP( gentity_t *pl, int afterindex );
void WPFlagsModify( int wpnum, int flags );
static int NotWithinRange( int base, int extent );
int NodeHere( vec3_t spot );
int CanGetToVector( vec3_t org1, vec3_t org2, vec3_t mins, vec3_t maxs );
int CanGetToVectorTravel( vec3_t org1, vec3_t org2, vec3_t mins, vec3_t maxs );
int CanGetToVectorTravel( vec3_t org1, vec3_t moveTo, vec3_t mins, vec3_t maxs );
int ConnectTrail( int startindex, int endindex, qboolean behindTheScenes );
int OpposingEnds( int start, int end );
int DoorBlockingSection( int start, int end );
int RepairPaths( qboolean behindTheScenes );
int OrgVisibleCurve( vec3_t org1, vec3_t mins, vec3_t maxs, vec3_t org2, int ignore );
int CanForceJumpTo( int baseindex, int testingindex, float distance );
void CalculatePaths();
gentity_t *GetObjectThatTargets( gentity_t *ent );
void CalculateSiegeGoals();
int GetNearestVisibleWPToItem( vec3_t org, int ignore );
void CalculateWeightGoals();
void CalculateJumpRoutes();
int LoadPathData( const char *filename );
void FlagObjects();
int SavePathData( const char *filename );
int G_NearestNodeToPoint( vec3_t point );
void G_NodeClearForNext();
void G_NodeClearFlags();
int G_NodeMatchingXY( float x, float y );
int G_NodeMatchingXY_BA( int x, int y, int final );
int G_RecursiveConnection( int start, int end, int weight, qboolean traceCheck, float baseHeight );
void G_DebugNodeFile();
void CreateAsciiTableRepresentation();
void CreateAsciiNodeTableRepresentation( int start, int end );
qboolean G_BackwardAttachment( int start, int finalDestination, int insertAfter );
void G_RMGPathing();
void BeginAutoPathRoutine();
void LoadPath_ThisLevel();
gentity_t *GetClosestSpawn( gentity_t *ent );
gentity_t *GetNextSpawnInIndex( gentity_t *currentSpawn );
int AcceptBotCommand( char *cmd, gentity_t *pl );

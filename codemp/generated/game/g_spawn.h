qboolean G_SpawnString( const char *key, const char *defaultString, char **out );
qboolean G_SpawnFloat( const char *key, const char *defaultString, float *out );
qboolean G_SpawnInt( const char *key, const char *defaultString, int *out );
qboolean G_SpawnVector( const char *key, const char *defaultString, float *out );
qboolean G_SpawnBoolean( const char *key, const char *defaultString, qboolean *out );
CCALL void SP_item_botroam( gentity_t *ent );
void SP_gametype_item( gentity_t *ent );
static int spawncmp( const void *a, const void *b );
qboolean G_CallSpawn( gentity_t *ent );
char *G_NewString( const char *string );
char *G_NewString_Safe( const char *string );
static int fieldcmp( const void *a, const void *b );
void G_ParseField( const char *key, const char *value, gentity_t *ent );
void G_SpawnGEntityFromSpawnVars( qboolean inSubBSP );
char *G_AddSpawnVarToken( const char *string );
void AddSpawnField( char *field, char *value );
static void HandleEntityAdjustment();
qboolean G_ParseSpawnVars( qboolean inSubBSP );
void SP_worldspawn();
qboolean SP_bsp_worldspawn();
void G_PrecacheSoundsets();
void G_LinkLocations();
void G_SpawnEntitiesFromString( qboolean inSubBSP );

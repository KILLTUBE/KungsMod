void Team_InitGame();
int OtherTeam( int team );
const char *TeamName( int team );
const char *OtherTeamName( int team );
const char *TeamColorString( int team );
void PrintCTFMessage( int plIndex, int teamIndex, int ctfMessage );
void AddTeamScore( vec3_t origin, int team, int score );
qboolean OnSameTeam( gentity_t *ent1, gentity_t *ent2 );
void Team_SetFlagStatus( int team, flagStatus_t status );
void Team_CheckDroppedItem( gentity_t *dropped );
void Team_FragBonuses( gentity_t *targ, gentity_t *inflictor, gentity_t *attacker );
void Team_CheckHurtCarrier( gentity_t *targ, gentity_t *attacker );
gentity_t *Team_ResetFlag( int team );
void Team_ResetFlags();
void Team_ReturnFlagSound( gentity_t *ent, int team );
void Team_TakeFlagSound( gentity_t *ent, int team );
void Team_CaptureFlagSound( gentity_t *ent, int team );
void Team_ReturnFlag( int team );
void Team_FreeEntity( gentity_t *ent );
void Team_DroppedFlagThink( gentity_t *ent );
int Team_TouchOurFlag( gentity_t *ent, gentity_t *other, int team );
int Team_TouchEnemyFlag( gentity_t *ent, gentity_t *other, int team );
int Pickup_Team( gentity_t *ent, gentity_t *other );
locationData_t *Team_GetLocation( gentity_t *ent );
qboolean Team_GetLocationMsg( gentity_t *ent, char *loc, int loclen );
gentity_t *SelectRandomTeamSpawnPoint( int teamstate, team_t team, int siegeClass );
gentity_t *SelectCTFSpawnPoint( team_t team, int teamstate, vec3_t origin, vec3_t angles, qboolean isbot );
gentity_t *SelectSiegeSpawnPoint( int siegeClass, team_t team, int teamstate, vec3_t origin, vec3_t angles, qboolean isbot );
QDECL static int SortClients( const void *a, const void *b );
void TeamplayInfoMessage( gentity_t *ent );
void CheckTeamStatus();
CCALL void SP_team_CTF_redplayer( gentity_t *ent );
CCALL void SP_team_CTF_blueplayer( gentity_t *ent );
CCALL void SP_team_CTF_redspawn( gentity_t *ent );
CCALL void SP_team_CTF_bluespawn( gentity_t *ent );

int adjustRespawnTime( float preRespawnTime, int itemType, int itemTag );
void ShieldRemove( gentity_t *self );
void ShieldThink( gentity_t *self );
void ShieldDie( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod );
void ShieldPain( gentity_t *self, gentity_t *attacker, int damage );
void ShieldGoSolid( gentity_t *self );
void ShieldGoNotSolid( gentity_t *self );
void ShieldTouch( gentity_t *self, gentity_t *other, trace_t *trace );
void CreateShield( gentity_t *ent );
qboolean PlaceShield( gentity_t *playerent );
void ItemUse_Binoculars( gentity_t *ent );
void ItemUse_Shield( gentity_t *ent );
void SentryTouch( gentity_t *ent, gentity_t *other, trace_t *trace );
void pas_fire( gentity_t *ent );
static qboolean pas_find_enemies( gentity_t *self );
void pas_adjust_enemy( gentity_t *ent );
void sentryExpire( gentity_t *self );
void pas_think( gentity_t *ent );
void turret_die( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod );
void turret_free( gentity_t *self );
void SP_PAS( gentity_t *base );
void ItemUse_Sentry( gentity_t *ent );
void ItemUse_Seeker( gentity_t *ent );
static void MedPackGive( gentity_t *ent, int amount );
void ItemUse_MedPack_Big( gentity_t *ent );
void ItemUse_MedPack( gentity_t *ent );
void Jetpack_Off( gentity_t *ent );
void Jetpack_On( gentity_t *ent );
void ItemUse_Jetpack( gentity_t *ent );
void ItemUse_UseCloak( gentity_t *ent );
void SpecialItemThink( gentity_t *ent );
void G_SpecialSpawnItem( gentity_t *ent, gitem_t *item );
void G_PrecacheDispensers();
void ItemUse_UseDisp( gentity_t *ent, int type );
void EWebDisattach( gentity_t *owner, gentity_t *eweb );
void EWebPrecache();
void EWebDie( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod );
void EWebPain( gentity_t *self, gentity_t *attacker, int damage );
void EWeb_SetBoneAngles( gentity_t *ent, char *bone, vec3_t angles );
void EWeb_SetBoneAnim( gentity_t *eweb, int startFrame, int endFrame );
void EWebFire( gentity_t *owner, gentity_t *eweb );
void EWebPositionUser( gentity_t *owner, gentity_t *eweb );
void EWebUpdateBoneAngles( gentity_t *owner, gentity_t *eweb );
void EWebThink( gentity_t *self );
gentity_t *EWeb_Create( gentity_t *spawner );
void ItemUse_UseEWeb( gentity_t *ent );
int Pickup_Powerup( gentity_t *ent, gentity_t *other );
int Pickup_Holdable( gentity_t *ent, gentity_t *other );
void Add_Ammo( gentity_t *ent, int weapon, int count );
int Pickup_Ammo( gentity_t *ent, gentity_t *other );
int Pickup_Weapon( gentity_t *ent, gentity_t *other );
int Pickup_Health( gentity_t *ent, gentity_t *other );
int Pickup_Armor( gentity_t *ent, gentity_t *other );
void RespawnItem( gentity_t *ent );
qboolean CheckItemCanBePickedUpByNPC( gentity_t *item, gentity_t *pickerupper );
void Touch_Item( gentity_t *ent, gentity_t *other, trace_t *trace );
gentity_t *LaunchItem( gitem_t *item, vec3_t origin, vec3_t velocity );
gentity_t *Drop_Item( gentity_t *ent, gitem_t *item, float angle );
void Use_Item( gentity_t *ent, gentity_t *other, gentity_t *activator );
void FinishSpawningItem( gentity_t *ent );
void G_CheckTeamItems();
void ClearRegisteredItems();
void RegisterItem( gitem_t *item );
void SaveRegisteredItems();
int G_ItemDisabled( gitem_t *item );
void G_SpawnItem( gentity_t *ent, gitem_t *item );
void G_BounceItem( gentity_t *ent, trace_t *trace );
void G_RunItem( gentity_t *ent );

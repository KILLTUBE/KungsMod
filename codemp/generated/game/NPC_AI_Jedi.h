void NPC_ShadowTrooper_Precache();
void Jedi_ClearTimers( gentity_t *ent );
void Jedi_PlayBlockedPushSound( gentity_t *self );
void Jedi_PlayDeflectSound( gentity_t *self );
void NPC_Jedi_PlayConfusionSound( gentity_t *self );
qboolean Jedi_CultistDestroyer( gentity_t *self );
void Boba_Precache();
void Boba_ChangeWeapon( int wp );
void WP_ResistForcePush( gentity_t *self, gentity_t *pusher, qboolean noPenalty );
qboolean Boba_StopKnockdown( gentity_t *self, gentity_t *pusher, vec3_t pushDir, qboolean forceKnockdown );
void Boba_FlyStart( gentity_t *self );
void Boba_FlyStop( gentity_t *self );
qboolean Boba_Flying( gentity_t *self );
void Boba_FireFlameThrower( gentity_t *self );
void Boba_StartFlameThrower( gentity_t *self );
void Boba_DoFlameThrower( gentity_t *self );
void Boba_FireDecide();
void Jedi_Cloak( gentity_t *self );
void Jedi_Decloak( gentity_t *self );
void Jedi_CheckCloak();
static void Jedi_Aggression( gentity_t *self, int change );
static void Jedi_AggressionErosion( int amt );
void NPC_Jedi_RateNewEnemy( gentity_t *self, gentity_t *enemy );
static void Jedi_Rage();
void Jedi_RageStop( gentity_t *self );
static qboolean Jedi_BattleTaunt();
static qboolean Jedi_ClearPathToSpot( vec3_t dest, int impactEntNum );
qboolean NPC_MoveDirClear( int forwardmove, int rightmove, qboolean reset );
static void Jedi_HoldPosition();
static void Jedi_Move( gentity_t *goal, qboolean retreat );
static qboolean Jedi_Hunt();
static void Jedi_Retreat();
static void Jedi_Advance();
static void Jedi_AdjustSaberAnimLevel( gentity_t *self, int newLevel );
static void Jedi_CheckDecreaseSaberAnimLevel();
static void Jedi_CombatDistance( int enemy_dist );
static qboolean Jedi_Strafe( int strafeTimeMin, int strafeTimeMax, int nextStrafeTimeMin, int nextStrafeTimeMax, qboolean walking );
evasionType_t Jedi_CheckFlipEvasions( gentity_t *self, float rightdot, float zdiff );
int Jedi_ReCalcParryTime( gentity_t *self, evasionType_t evasionType );
qboolean Jedi_QuickReactions( gentity_t *self );
qboolean Jedi_SaberBusy( gentity_t *self );
evasionType_t Jedi_SaberBlockGo( gentity_t *self, usercmd_t *cmd, vec3_t pHitloc, vec3_t phitDir, gentity_t *incoming, float dist );
static qboolean Jedi_SaberBlock( int saberNum, int bladeNum );
static void Jedi_EvasionSaber( vec3_t enemy_movedir, float enemy_dist, vec3_t enemy_dir );
gentity_t *Jedi_FindEnemyInCone( gentity_t *self, gentity_t *fallback, float minDot );
static void Jedi_SetEnemyInfo( vec3_t enemy_dest, vec3_t enemy_dir, float *enemy_dist, vec3_t enemy_movedir, float *enemy_movespeed, int prediction );
static void Jedi_FaceEnemy( qboolean doPitch );
static void Jedi_DebounceDirectionChanges();
static void Jedi_TimersApply();
static void Jedi_CombatTimersUpdate( int enemy_dist );
static void Jedi_CombatIdle( int enemy_dist );
static qboolean Jedi_AttackDecide( int enemy_dist );
static qboolean Jedi_Jump( vec3_t dest, int goalEntNum );
static qboolean Jedi_TryJump( gentity_t *goal );
static qboolean Jedi_Jumping( gentity_t *goal );
static void Jedi_CheckEnemyMovement( float enemy_dist );
static void Jedi_CheckJumps();
static void Jedi_Combat();
void NPC_Jedi_Pain( gentity_t *self, gentity_t *attacker, int damage );
qboolean Jedi_CheckDanger();
qboolean Jedi_CheckAmbushPlayer();
void Jedi_Ambush( gentity_t *self );
qboolean Jedi_WaitingAmbush( gentity_t *self );
static void Jedi_Patrol();
qboolean Jedi_CanPullBackSaber( gentity_t *self );
void NPC_BSJedi_FollowLeader();
static void Jedi_Attack();
qboolean Jedi_InSpecialMove();
void NPC_BSJedi_Default();

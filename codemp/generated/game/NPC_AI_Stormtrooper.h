void ST_AggressionAdjust( gentity_t *self, int change );
void ST_ClearTimers( gentity_t *ent );
static void ST_Speech( gentity_t *self, int speechType, float failChance );
void ST_MarkToCover( gentity_t *self );
void ST_StartFlee( gentity_t *self, gentity_t *enemy, vec3_t dangerPoint, int dangerLevel, int minTime, int maxTime );
void NPC_ST_Pain( gentity_t *self, gentity_t *attacker, int damage );
static void ST_HoldPosition();
void NPC_ST_SayMovementSpeech();
void NPC_ST_StoreMovementSpeech( int speech, float chance );
static qboolean ST_Move();
static void NPC_ST_SleepShuffle();
void NPC_BSST_Sleep();
qboolean NPC_CheckEnemyStealth( gentity_t *target );
qboolean NPC_CheckPlayerTeamStealth();
static qboolean NPC_ST_InvestigateEvent( int eventID, qboolean extraSuspicious );
static void ST_OffsetLook( float offset, vec3_t out );
static void ST_LookAround();
void NPC_BSST_Investigate();
void NPC_BSST_Patrol();
static void ST_CheckMoveState();
void ST_ResolveBlockedShot( int hit );
static void ST_CheckFireState();
void ST_TrackEnemy( gentity_t *self, vec3_t enemyPos );
int ST_ApproachEnemy( gentity_t *self );
void ST_HuntEnemy( gentity_t *self );
void ST_TransferTimers( gentity_t *self, gentity_t *other );
void ST_TransferMoveGoal( gentity_t *self, gentity_t *other );
int ST_GetCPFlags();
void ST_Commander();
void NPC_BSST_Attack();
void NPC_BSST_Default();

int BG_SoundIndex( const char *sound );
qboolean BG_ParseLiteral( const char **data, const char *string );
qboolean BG_ParseLiteralSilent( const char **data, const char *string );
saber_colors_t TranslateSaberColor( const char *name );
const char *SaberColorToString( saber_colors_t color );
saber_styles_t TranslateSaberStyle( const char *name );
saberType_t TranslateSaberType( const char *name );
qboolean WP_SaberBladeUseSecondBladeStyle( saberInfo_t *saber, int bladeNum );
qboolean WP_SaberBladeDoTransitionDamage( saberInfo_t *saber, int bladeNum );
qboolean WP_UseFirstValidSaberStyle( saberInfo_t *saber1, saberInfo_t *saber2, int saberHolstered, int *saberAnimLevel );
qboolean WP_SaberStyleValidForSaber( saberInfo_t *saber1, saberInfo_t *saber2, int saberHolstered, int saberAnimLevel );
qboolean WP_SaberCanTurnOffSomeBlades( saberInfo_t *saber );
void WP_SaberSetDefaults( saberInfo_t *saber );
static void Saber_ParseName( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberType( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberModel( saberInfo_t *saber, const char **p );
static void Saber_ParseCustomSkin( saberInfo_t *saber, const char **p );
static void Saber_ParseSoundOn( saberInfo_t *saber, const char **p );
static void Saber_ParseSoundLoop( saberInfo_t *saber, const char **p );
static void Saber_ParseSoundOff( saberInfo_t *saber, const char **p );
static void Saber_ParseNumBlades( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberColor( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberColor2( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberColor3( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberColor4( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberColor5( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberColor6( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberColor7( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberLength( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberLength2( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberLength3( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberLength4( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberLength5( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberLength6( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberLength7( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberRadius( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberRadius2( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberRadius3( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberRadius4( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberRadius5( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberRadius6( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberRadius7( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberStyle( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberStyleLearned( saberInfo_t *saber, const char **p );
static void Saber_ParseSaberStyleForbidden( saberInfo_t *saber, const char **p );
static void Saber_ParseMaxChain( saberInfo_t *saber, const char **p );
static void Saber_ParseLockable( saberInfo_t *saber, const char **p );
static void Saber_ParseThrowable( saberInfo_t *saber, const char **p );
static void Saber_ParseDisarmable( saberInfo_t *saber, const char **p );
static void Saber_ParseBlocking( saberInfo_t *saber, const char **p );
static void Saber_ParseTwoHanded( saberInfo_t *saber, const char **p );
static void Saber_ParseForceRestrict( saberInfo_t *saber, const char **p );
static void Saber_ParseLockBonus( saberInfo_t *saber, const char **p );
static void Saber_ParseParryBonus( saberInfo_t *saber, const char **p );
static void Saber_ParseBreakParryBonus( saberInfo_t *saber, const char **p );
static void Saber_ParseBreakParryBonus2( saberInfo_t *saber, const char **p );
static void Saber_ParseDisarmBonus( saberInfo_t *saber, const char **p );
static void Saber_ParseDisarmBonus2( saberInfo_t *saber, const char **p );
static void Saber_ParseSingleBladeStyle( saberInfo_t *saber, const char **p );
static void Saber_ParseSingleBladeThrowable( saberInfo_t *saber, const char **p );
static void Saber_ParseBrokenSaber1( saberInfo_t *saber, const char **p );
static void Saber_ParseBrokenSaber2( saberInfo_t *saber, const char **p );
static void Saber_ParseReturnDamage( saberInfo_t *saber, const char **p );
static void Saber_ParseSpinSound( saberInfo_t *saber, const char **p );
static void Saber_ParseSwingSound1( saberInfo_t *saber, const char **p );
static void Saber_ParseSwingSound2( saberInfo_t *saber, const char **p );
static void Saber_ParseSwingSound3( saberInfo_t *saber, const char **p );
static void Saber_ParseMoveSpeedScale( saberInfo_t *saber, const char **p );
static void Saber_ParseAnimSpeedScale( saberInfo_t *saber, const char **p );
static void Saber_ParseBounceOnWalls( saberInfo_t *saber, const char **p );
static void Saber_ParseBoltToWrist( saberInfo_t *saber, const char **p );
static void Saber_ParseKataMove( saberInfo_t *saber, const char **p );
static void Saber_ParseLungeAtkMove( saberInfo_t *saber, const char **p );
static void Saber_ParseJumpAtkUpMove( saberInfo_t *saber, const char **p );
static void Saber_ParseJumpAtkFwdMove( saberInfo_t *saber, const char **p );
static void Saber_ParseJumpAtkBackMove( saberInfo_t *saber, const char **p );
static void Saber_ParseJumpAtkRightMove( saberInfo_t *saber, const char **p );
static void Saber_ParseJumpAtkLeftMove( saberInfo_t *saber, const char **p );
static void Saber_ParseReadyAnim( saberInfo_t *saber, const char **p );
static void Saber_ParseDrawAnim( saberInfo_t *saber, const char **p );
static void Saber_ParsePutawayAnim( saberInfo_t *saber, const char **p );
static void Saber_ParseTauntAnim( saberInfo_t *saber, const char **p );
static void Saber_ParseBowAnim( saberInfo_t *saber, const char **p );
static void Saber_ParseMeditateAnim( saberInfo_t *saber, const char **p );
static void Saber_ParseFlourishAnim( saberInfo_t *saber, const char **p );
static void Saber_ParseGloatAnim( saberInfo_t *saber, const char **p );
static void Saber_ParseNoRollStab( saberInfo_t *saber, const char **p );
static void Saber_ParseNoPullAttack( saberInfo_t *saber, const char **p );
static void Saber_ParseNoBackAttack( saberInfo_t *saber, const char **p );
static void Saber_ParseNoStabDown( saberInfo_t *saber, const char **p );
static void Saber_ParseNoWallRuns( saberInfo_t *saber, const char **p );
static void Saber_ParseNoWallFlips( saberInfo_t *saber, const char **p );
static void Saber_ParseNoWallGrab( saberInfo_t *saber, const char **p );
static void Saber_ParseNoRolls( saberInfo_t *saber, const char **p );
static void Saber_ParseNoFlips( saberInfo_t *saber, const char **p );
static void Saber_ParseNoCartwheels( saberInfo_t *saber, const char **p );
static void Saber_ParseNoKicks( saberInfo_t *saber, const char **p );
static void Saber_ParseNoMirrorAttacks( saberInfo_t *saber, const char **p );
static void Saber_ParseOnInWater( saberInfo_t *saber, const char **p );
static void Saber_ParseNotInMP( saberInfo_t *saber, const char **p );
static void Saber_ParseBladeStyle2Start( saberInfo_t *saber, const char **p );
static void Saber_ParseNoWallMarks( saberInfo_t *saber, const char **p );
static void Saber_ParseNoDLight( saberInfo_t *saber, const char **p );
static void Saber_ParseNoBlade( saberInfo_t *saber, const char **p );
static void Saber_ParseTrailStyle( saberInfo_t *saber, const char **p );
static void Saber_ParseG2MarksShader( saberInfo_t *saber, const char **p );
static void Saber_ParseG2WeaponMarkShader( saberInfo_t *saber, const char **p );
static void Saber_ParseKnockbackScale( saberInfo_t *saber, const char **p );
static void Saber_ParseDamageScale( saberInfo_t *saber, const char **p );
static void Saber_ParseNoDismemberment( saberInfo_t *saber, const char **p );
static void Saber_ParseNoIdleEffect( saberInfo_t *saber, const char **p );
static void Saber_ParseAlwaysBlock( saberInfo_t *saber, const char **p );
static void Saber_ParseNoManualDeactivate( saberInfo_t *saber, const char **p );
static void Saber_ParseTransitionDamage( saberInfo_t *saber, const char **p );
static void Saber_ParseSplashRadius( saberInfo_t *saber, const char **p );
static void Saber_ParseSplashDamage( saberInfo_t *saber, const char **p );
static void Saber_ParseSplashKnockback( saberInfo_t *saber, const char **p );
static void Saber_ParseHitSound1( saberInfo_t *saber, const char **p );
static void Saber_ParseHitSound2( saberInfo_t *saber, const char **p );
static void Saber_ParseHitSound3( saberInfo_t *saber, const char **p );
static void Saber_ParseBlockSound1( saberInfo_t *saber, const char **p );
static void Saber_ParseBlockSound2( saberInfo_t *saber, const char **p );
static void Saber_ParseBlockSound3( saberInfo_t *saber, const char **p );
static void Saber_ParseBounceSound1( saberInfo_t *saber, const char **p );
static void Saber_ParseBounceSound2( saberInfo_t *saber, const char **p );
static void Saber_ParseBounceSound3( saberInfo_t *saber, const char **p );
static void Saber_ParseBlockEffect( saberInfo_t *saber, const char **p );
static void Saber_ParseHitPersonEffect( saberInfo_t *saber, const char **p );
static void Saber_ParseHitOtherEffect( saberInfo_t *saber, const char **p );
static void Saber_ParseBladeEffect( saberInfo_t *saber, const char **p );
static void Saber_ParseNoClashFlare( saberInfo_t *saber, const char **p );
static void Saber_ParseNoWallMarks2( saberInfo_t *saber, const char **p );
static void Saber_ParseNoDLight2( saberInfo_t *saber, const char **p );
static void Saber_ParseNoBlade2( saberInfo_t *saber, const char **p );
static void Saber_ParseTrailStyle2( saberInfo_t *saber, const char **p );
static void Saber_ParseG2MarksShader2( saberInfo_t *saber, const char **p );
static void Saber_ParseG2WeaponMarkShader2( saberInfo_t *saber, const char **p );
static void Saber_ParseKnockbackScale2( saberInfo_t *saber, const char **p );
static void Saber_ParseDamageScale2( saberInfo_t *saber, const char **p );
static void Saber_ParseNoDismemberment2( saberInfo_t *saber, const char **p );
static void Saber_ParseNoIdleEffect2( saberInfo_t *saber, const char **p );
static void Saber_ParseAlwaysBlock2( saberInfo_t *saber, const char **p );
static void Saber_ParseNoManualDeactivate2( saberInfo_t *saber, const char **p );
static void Saber_ParseTransitionDamage2( saberInfo_t *saber, const char **p );
static void Saber_ParseSplashRadius2( saberInfo_t *saber, const char **p );
static void Saber_ParseSplashDamage2( saberInfo_t *saber, const char **p );
static void Saber_ParseSplashKnockback2( saberInfo_t *saber, const char **p );
static void Saber_ParseHit2Sound1( saberInfo_t *saber, const char **p );
static void Saber_ParseHit2Sound2( saberInfo_t *saber, const char **p );
static void Saber_ParseHit2Sound3( saberInfo_t *saber, const char **p );
static void Saber_ParseBlock2Sound1( saberInfo_t *saber, const char **p );
static void Saber_ParseBlock2Sound2( saberInfo_t *saber, const char **p );
static void Saber_ParseBlock2Sound3( saberInfo_t *saber, const char **p );
static void Saber_ParseBounce2Sound1( saberInfo_t *saber, const char **p );
static void Saber_ParseBounce2Sound2( saberInfo_t *saber, const char **p );
static void Saber_ParseBounce2Sound3( saberInfo_t *saber, const char **p );
static void Saber_ParseBlockEffect2( saberInfo_t *saber, const char **p );
static void Saber_ParseHitPersonEffect2( saberInfo_t *saber, const char **p );
static void Saber_ParseHitOtherEffect2( saberInfo_t *saber, const char **p );
static void Saber_ParseBladeEffect2( saberInfo_t *saber, const char **p );
static void Saber_ParseNoClashFlare2( saberInfo_t *saber, const char **p );
static int KeywordHash_Key( const char *keyword );
static void KeywordHash_Add( keywordHash_t *table[], keywordHash_t *key );
static keywordHash_t *KeywordHash_Find( keywordHash_t *table[], const char *keyword );
static void WP_SaberSetupKeywordHash();
qboolean WP_SaberParseParms( const char *saberName, saberInfo_t *saber );
qboolean WP_SaberParseParm( const char *saberName, const char *parmname, char *saberData );
qboolean WP_SaberValidForPlayerInMP( const char *saberName );
void WP_RemoveSaber( saberInfo_t *sabers, int saberNum );
void WP_SetSaber( int entNum, saberInfo_t *sabers, int saberNum, const char *saberName );
void WP_SaberSetColor( saberInfo_t *sabers, int saberNum, int bladeNum, char *colorName );
void WP_SaberLoadParms();
qboolean WP_IsSaberTwoHanded( const char *saberName );
void WP_SaberGetHiltInfo( const char *singleHilts[MAX_SABER_HILTS], const char *staffHilts[MAX_SABER_HILTS] );
void BG_BLADE_ActivateTrail( bladeInfo_t *blade, float duration );
void BG_BLADE_DeactivateTrail( bladeInfo_t *blade, float duration );
void BG_SI_Activate( saberInfo_t *saber );
void BG_SI_Deactivate( saberInfo_t *saber );
void BG_SI_BladeActivate( saberInfo_t *saber, int iBlade, qboolean bActive );
qboolean BG_SI_Active( saberInfo_t *saber );
void BG_SI_SetLength( saberInfo_t *saber, float length );
void BG_SI_SetDesiredLength( saberInfo_t *saber, float len, int bladeNum );
void BG_SI_SetLengthGradual( saberInfo_t *saber, int time );
float BG_SI_Length( saberInfo_t *saber );
float BG_SI_LengthMax( saberInfo_t *saber );
void BG_SI_ActivateTrail( saberInfo_t *saber, float duration );
void BG_SI_DeactivateTrail( saberInfo_t *saber, float duration );

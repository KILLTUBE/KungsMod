int MenuFontToHandle_CGunnamed();
int CG_Text_Widthunnamed( const char *text, float scale, int iMenuFont );
int CG_Text_Heightunnamed( const char *text, float scale, int iMenuFont );
void CG_Text_Paintunnamed( float x, float y, float scale, vec4_t color, const char *text, float adjust, int limit, int style, int iMenuFont );
static void CG_DrawZoomMaskunnamed();
void CG_Draw3DModelunnamed( float x, float y, float w, float h, qhandle_t model, void *ghoul2, int g2radius, qhandle_t skin, vec3_t origin, vec3_t angles );
void CG_DrawHeadunnamed( float x, float y, float w, float h, int clientNum, vec3_t headAngles );
void CG_DrawFlagModelunnamed( float x, float y, float w, float h, int team, qboolean force2D );
void CG_DrawHealthunnamed( menuDef_t *menuHUD );
void CG_DrawArmorunnamed( menuDef_t *menuHUD );
static void CG_DrawSaberStyleunnamed( centity_t *cent, menuDef_t *menuHUD );
static void CG_DrawAmmounnamed( centity_t *cent, menuDef_t *menuHUD );
void CG_DrawForcePowerunnamed( menuDef_t *menuHUD );
static void CG_DrawSimpleSaberStyleunnamed( const centity_t *cent );
static void CG_DrawSimpleAmmounnamed( const centity_t *cent );
static void CG_DrawSimpleForcePowerunnamed( const centity_t *cent );
void CG_DrawHUDunnamed( centity_t *cent );
qboolean ForcePower_Validunnamed();
void CG_DrawForceSelectunnamed();
void CG_DrawInvenSelectunnamed();
qboolean CG_CheckTargetVehicleunnamed( centity_t **pTargetVeh, float *alpha );
float CG_DrawVehicleShieldsunnamed( const menuDef_t *menuHUD, const centity_t *veh );
void CG_DrawVehicleAmmounnamed( const menuDef_t *menuHUD, const centity_t *veh );
void CG_DrawVehicleAmmoUpperunnamed( const menuDef_t *menuHUD, const centity_t *veh );
void CG_DrawVehicleAmmoLowerunnamed( const menuDef_t *menuHUD, const centity_t *veh );
void CG_DrawVehicleTurboRechargeunnamed( const menuDef_t *menuHUD, const centity_t *veh );
void CG_DrawVehicleWeaponsLinkedunnamed( const menuDef_t *menuHUD, const centity_t *veh );
void CG_DrawVehicleSpeedunnamed( const menuDef_t *menuHUD, const centity_t *veh );
void CG_DrawVehicleArmorunnamed( const menuDef_t *menuHUD, const centity_t *veh );
void CG_DrawVehicleDamageunnamed( const centity_t *veh, int brokenLimbs, const menuDef_t *menuHUD, float alpha, int index );
void CG_DrawVehicleDamageHUDunnamed( const centity_t *veh, int brokenLimbs, float percShields, char *menuName, float alpha );
qboolean CG_DrawVehicleHudunnamed( const centity_t *cent );
static void CG_DrawStatsunnamed();
static void CG_DrawPickupItemunnamed();
void CG_DrawTeamBackgroundunnamed( int x, int y, int w, int h, float alpha, int team );
static float CG_DrawMiniScoreboardunnamed();
static float CG_DrawEnemyInfounnamed();
static float CG_DrawSnapshotunnamed();
static float CG_DrawFPSunnamed();
void CG_DrawHealthBarRoughunnamed( float x, float y, int width, int height, float ratio, const float *color1, const float *color2 );
void CG_DrawDuelistHealthunnamed( float x, float y, float w, float h, int duelist );
f RADAR_ASTEROID_RANGEunnamed();
static float CG_DrawTimerunnamed();
static float CG_DrawTeamOverlayunnamed( float y, qboolean right, qboolean upper );
static void CG_DrawPowerupIconsunnamed();
static void CG_DrawUpperRightunnamed();
static JK2AWARDS voidunnamed();
void CG_AddLagometerFrameInfounnamed();
void CG_AddLagometerSnapshotInfounnamed( snapshot_t *snap );
static void CG_DrawDisconnectunnamed();
static void CG_DrawLagometerunnamed();
void CG_DrawSiegeMessageunnamed( const char *str, int objectiveScreen );
void CG_DrawSiegeMessageNonMenuunnamed( const char *str );
void CG_CenterPrintunnamed( const char *str, int y, int charWidth );
qboolean BG_IsWhiteSpaceunnamed();
static void CG_DrawCenterStringunnamed();
f HEALTH_HEIGHTunnamed( centity_t *cent, float chX, float chY, float chW, float chH );
void CG_DrawHealthBarunnamed( centity_t *cent, float chX, float chY, float chW, float chH );
void CG_DrawHaqrBarunnamed( float chX, float chY, float chW, float chH );
void CG_DrawGenericTimerBarunnamed();
void CG_LerpCrosshairPosunnamed( float *x, float *y );
static void CG_DrawCrosshairunnamed( vec3_t worldPoint, int chEntValid );
qboolean CG_WorldCoordToScreenCoordFloatunnamed( vec3_t worldCoord, float *x, float *y );
qboolean CG_WorldCoordToScreenCoordunnamed( vec3_t worldCoord, int *x, int *y );
void CG_SaberClashFlareunnamed();
void CG_DottedLineunnamed( float x1, float y1, float x2, float y2, float dotSize, int numDots, vec4_t color, float alpha );
void CG_BracketEntityunnamed( centity_t *cent, float radius );
qboolean CG_InFighterunnamed();
qboolean CG_InATSTunnamed();
void CG_DrawBracketedEntitiesunnamed();
static void CG_DrawHolocronIconsunnamed();
static qboolean CG_IsDurationPowerunnamed();
static void CG_DrawActivePowersunnamed();
static void CG_DrawRocketLockingunnamed( int lockEntNum, int lockTime );
qboolean CG_CalcVehicleMuzzlePointunnamed( int entityNum, vec3_t start, vec3_t d_f, vec3_t d_rt, vec3_t d_up );
void CG_CalcEWebMuzzlePointunnamed( centity_t *cent, vec3_t start, vec3_t d_f, vec3_t d_rt, vec3_t d_up );
static f voidunnamed();
static void CG_DrawCrosshairNamesunnamed();
static void CG_DrawSpectatorunnamed();
static void CG_DrawVoteunnamed();
static void CG_DrawTeamVoteunnamed();
static qboolean CG_DrawScoreboardunnamed();
static void CG_DrawIntermissionunnamed();
static qboolean CG_DrawFollowunnamed();
static void CG_DrawTemporaryStatsunnamed();
static void CG_DrawAmmoWarningunnamed();
static void CG_DrawWarmupunnamed();
void CG_DrawTimedMenusunnamed();
void CG_DrawFlagStatusunnamed();
f voidunnamed();
f voidunnamed();
f voidunnamed();
static void CG_DrawSiegeTimerunnamed( int timeRemaining, qboolean isMyTeam );
static void CG_DrawSiegeDeathTimerunnamed();
static void CG_DrawSiegeHUDItemunnamed();
void CG_ChatBox_StrInsertunnamed( char *buffer, int place, char *str );
void CG_ChatBox_AddStringunnamed( char *chatStr );
void CG_ChatBox_ArrayInsertunnamed( chatBoxItem_t **array, int insPoint, int maxNum, chatBoxItem_t *item );
static QINLINE voidunnamed();
static void CG_Draw2DScreenTintsunnamed();
static void CG_Draw2Dunnamed();
void CG_DrawMiscStaticModelsunnamed();
static void CG_DrawTourneyScoreboardunnamed();
void CG_DrawActiveunnamed();

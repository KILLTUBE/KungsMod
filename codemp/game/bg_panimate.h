#pragma once

#include "../qcommon/q_shared.h"
#include "../game/bg_public.h"

EXTERNC bgLoadedAnim_t bgAllAnims[MAX_ANIM_FILES];
EXTERNC int bgNumAnimEvents;
EXTERNC bgLoadedEvents_t bgAllEvents[MAX_ANIM_FILES];
EXTERNC int bgNumAllAnims;
EXTERNC animation_t bgHumanoidAnimations[MAX_TOTALANIMATIONS];
EXTERNC qboolean BGPAFtextLoaded;
EXTERNC stringID_table_t footstepTypeTable[NUM_FOOTSTEP_TYPES+1];
EXTERNC stringID_table_t animEventTypeTable[MAX_ANIM_EVENTS+1];

CCALL void PM_SetAnim(int setAnimParts,int anim,int setAnimFlags);
CCALL void BG_SetAnim(playerState_t *ps,animation_t *animations,int setAnimParts,int anim,int setAnimFlags);
CCALL int BG_PickAnim(int animIndex,int minAnim,int maxAnim);
CCALL qboolean BG_HasAnimation(int animIndex,int animation);
CCALL void PM_SetAnimFinal(int setAnimParts,int anim,int setAnimFlags);
CCALL void BG_SetAnimFinal(playerState_t *ps,animation_t *animations,int setAnimParts,int anim,int setAnimFlags);
CCALL qboolean PM_WalkingAnim(int anim);
CCALL qboolean PM_RunningAnim(int anim);
CCALL void BG_SaberStartTransAnim(int clientNum,int saberAnimLevel,int weapon,int anim,float *animSpeed,int broken);
CCALL void PM_SetTorsoAnimTimer(int time);
CCALL void BG_SetTorsoAnimTimer(playerState_t *ps,int time);
CCALL void PM_SetLegsAnimTimer(int time);
CCALL void BG_SetLegsAnimTimer(playerState_t *ps,int time);
CCALL void PM_StartTorsoAnim(int anim);
CCALL void BG_StartTorsoAnim(playerState_t *ps,int anim);
CCALL void PM_ForceLegsAnim(int anim);
CCALL void PM_ContinueLegsAnim(int anim);
CCALL int BG_ParseAnimationFile(const char *filename,animation_t *animset,qboolean isHumanoid);
CCALL int BG_ParseAnimationEvtFile(const char *as_filename,int animFileIndex,int eventFileIndex);
CCALL void ParseAnimationEvtBlock(const char *aeb_filename,animevent_t *animEvents,animation_t *animations,int *i,const char **text_p);
CCALL int CheckAnimFrameForEventType(animevent_t *animEvents,int keyFrame,animEventType_t eventType);
CCALL void BG_AnimsetFree(animation_t *animset);
CCALL animation_t *BG_AnimsetAlloc(void);
CCALL void BG_ClearAnimsets(void);
CCALL void BG_InitAnimsets(void);
CCALL void BG_FlipPart(playerState_t *ps,int part);
CCALL qboolean BG_SaberInTransitionAny(int move);
CCALL qboolean PM_SaberInTransition(int move);
CCALL void PM_DebugLegsAnim(int anim);
CCALL int PM_AnimLength(int index,animNumber_t anim);
CCALL qboolean BG_FullBodyTauntAnim(int anim);
CCALL qboolean BG_SaberLockBreakAnim(int anim);
CCALL qboolean BG_SuperBreakWinAnim(int anim);
CCALL qboolean BG_SuperBreakLoseAnim(int anim);
CCALL qboolean PM_CanRollFromSoulCal(playerState_t *ps);
CCALL qboolean PM_InRollComplete(playerState_t *ps,int anim);
CCALL qboolean PM_InOnGroundAnim(int anim);
CCALL qboolean PM_SpinningAnim(int anim);
CCALL qboolean PM_LandingAnim(int anim);
CCALL qboolean PM_JumpingAnim(int anim);
CCALL qboolean PM_PainAnim(int anim);
CCALL qboolean PM_InKnockDown(playerState_t *ps);
CCALL qboolean PM_InSaberAnim(int anim);
CCALL qboolean BG_SaberInReturn(int move);
CCALL qboolean PM_SaberInReturn(int move);
CCALL qboolean PM_SaberInStart(int move);
CCALL qboolean PM_SaberInReflect(int move);
CCALL qboolean PM_SaberInKnockaway(int move);
CCALL qboolean PM_SaberInParry(int move);
CCALL qboolean PM_SaberInDeflect(int move);
CCALL int PM_SaberDeflectionForQuad(int quad);
CCALL int PM_SaberBounceForAttack(int move);
CCALL qboolean BG_StabDownAnim(int anim);
CCALL int BG_AnimLength(int index,animNumber_t anim);
CCALL qboolean BG_InKnockDownOnGround(playerState_t *ps);
CCALL qboolean PM_InCartwheel(int anim);
CCALL qboolean BG_InSaberLock(int anim);
CCALL qboolean BG_InSaberLockOld(int anim);
CCALL qboolean BG_InKnockDownOnly(int anim);
CCALL qboolean BG_InDeathAnim(int anim);
CCALL qboolean BG_InSpecialDeathAnim(int anim);
CCALL qboolean BG_InRoll(playerState_t *ps,int anim);
CCALL int BG_KnockawayForParry(int move);
CCALL int BG_BrokenParryForParry(int move);
CCALL int BG_BrokenParryForAttack(int move);
CCALL int BG_InGrappleMove(int anim);
CCALL qboolean BG_KickingAnim(int anim);
CCALL qboolean BG_SaberInSpecialAttack(int anim);
CCALL qboolean BG_SpinningSaberAnim(int anim);
CCALL qboolean BG_FlippingAnim(int anim);
CCALL qboolean BG_InExtraDefenseSaberMove(int move);
CCALL qboolean BG_SaberInIdle(int move);
CCALL qboolean BG_KickMove(int move);
CCALL qboolean BG_SaberInSpecial(int move);
CCALL qboolean BG_InKataAnim(int anim);
CCALL qboolean BG_SaberInKata(int saberMove);
CCALL qboolean BG_SaberInAttack(int move);
CCALL qboolean BG_SaberInAttackPure(int move);
CCALL qboolean BG_DirectFlippingAnim(int anim);
CCALL qboolean BG_InSaberStandAnim(int anim);
CCALL qboolean BG_InBackFlip(int anim);
CCALL qboolean BG_InReboundRelease(int anim);
CCALL qboolean BG_InReboundHold(int anim);
CCALL qboolean BG_InReboundJump(int anim);
CCALL qboolean BG_InSpecialJump(int anim);
CCALL qboolean BG_CrouchAnim(int anim);
CCALL qboolean BG_SaberStanceAnim(int anim);
CCALL saberInfo_t *BG_MySaber(int clientNum,int saberNum);
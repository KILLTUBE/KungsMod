CG_PlaceString( rank_ ) = ccall((:CG_PlaceString, lib), Ptr{Char}, ( Int32,  ), rank_ );
CG_Obituary( ent_ ) = ccall((:CG_Obituary, lib), Void, ( Ptr{entityState_t},  ), ent_ );
CG_ToggleBinoculars( cent_, forceZoom_ ) = ccall((:CG_ToggleBinoculars, lib), Void, ( Ptr{centity_t}, Int32,  ), cent_, forceZoom_ );
CG_LocalTimingBar( startTime_, duration_ ) = ccall((:CG_LocalTimingBar, lib), Void, ( Int32, Int32,  ), startTime_, duration_ );
CG_UseItem( cent_ ) = ccall((:CG_UseItem, lib), Void, ( Ptr{centity_t},  ), cent_ );
CG_ItemPickup( itemNum_ ) = ccall((:CG_ItemPickup, lib), Void, ( Int32,  ), itemNum_ );
CG_PainEvent( cent_, health_ ) = ccall((:CG_PainEvent, lib), Void, ( Ptr{centity_t}, Int32,  ), cent_, health_ );
CG_ReattachLimb( source_ ) = ccall((:CG_ReattachLimb, lib), Void, ( Ptr{centity_t},  ), source_ );
CG_TeamName( team_ ) = ccall((:CG_TeamName, lib), Ptr{Char}, ( Int32,  ), team_ );
CG_PrintCTFMessage( ci_, teamName_, ctfMessage_ ) = ccall((:CG_PrintCTFMessage, lib), Void, ( Ptr{clientInfo_t}, Ptr{Char}, Int32,  ), ci_, teamName_, ctfMessage_ );
CG_GetCTFMessageEvent( es_ ) = ccall((:CG_GetCTFMessageEvent, lib), Void, ( Ptr{entityState_t},  ), es_ );
DoFall( cent_, es_, clientNum_ ) = ccall((:DoFall, lib), Void, ( Ptr{centity_t}, Ptr{entityState_t}, Int32,  ), cent_, es_, clientNum_ );
CG_InClientBitflags( ent_, client_ ) = ccall((:CG_InClientBitflags, lib), Int32, ( Ptr{entityState_t}, Int32,  ), ent_, client_ );
CG_TryPlayCustomSound( origin_, entityNum_, channel_, soundName_ ) = ccall((:CG_TryPlayCustomSound, lib), Void, ( vec3_t, Int32, Int32, Ptr{Char},  ), origin_, entityNum_, channel_, soundName_ );
CG_G2MarkEvent( es_ ) = ccall((:CG_G2MarkEvent, lib), Void, ( Ptr{entityState_t},  ), es_ );
CG_CalcVehMuzzle( pVeh_, ent_, muzzleNum_ ) = ccall((:CG_CalcVehMuzzle, lib), Void, ( Ptr{Vehicle_t}, Ptr{centity_t}, Int32,  ), pVeh_, ent_, muzzleNum_ );
CG_VehMuzzleFireFX( veh_, broadcaster_ ) = ccall((:CG_VehMuzzleFireFX, lib), Void, ( Ptr{centity_t}, Ptr{entityState_t},  ), veh_, broadcaster_ );
CG_GetStringForVoiceSound( s_ ) = ccall((:CG_GetStringForVoiceSound, lib), Ptr{Char}, ( Ptr{Char},  ), s_ );
CG_EntityEvent( cent_, position_ ) = ccall((:CG_EntityEvent, lib), Void, ( Ptr{centity_t}, vec3_t,  ), cent_, position_ );
CG_CheckEvents( cent_ ) = ccall((:CG_CheckEvents, lib), Void, ( Ptr{centity_t},  ), cent_ );

CG_GetSelectedPlayer() = ccall((:CG_GetSelectedPlayer, lib), Int32, (),  );
CG_StatusHandle( task_ ) = ccall((:CG_StatusHandle, lib), qhandle_t, ( Int32,  ), task_ );
CG_GetValue( ownerDraw_ ) = ccall((:CG_GetValue, lib), Float32, ( Int32,  ), ownerDraw_ );
CG_OtherTeamHasFlag() = ccall((:CG_OtherTeamHasFlag, lib), qboolean, (),  );
CG_YourTeamHasFlag() = ccall((:CG_YourTeamHasFlag, lib), qboolean, (),  );
CG_OwnerDrawVisible( flags_ ) = ccall((:CG_OwnerDrawVisible, lib), qboolean, ( Int32,  ), flags_ );
CG_GetKillerText() = ccall((:CG_GetKillerText, lib), Ptr{Char}, (),  );
CG_GetGameStatusText() = ccall((:CG_GetGameStatusText, lib), Ptr{Char}, (),  );
CG_Text_Paint_Limit( maxX_, x_, y_, scale_, color_, text_, adjust_, limit_, iMenuFont_ ) = ccall((:CG_Text_Paint_Limit, lib), Void, ( Ptr{Float32}, Float32, Float32, Float32, vec4_t, Ptr{Char}, Float32, Int32, Int32,  ), maxX_, x_, y_, scale_, color_, text_, adjust_, limit_, iMenuFont_ );
CG_DrawNewTeamInfo( rect_, text_x_, text_y_, scale_, color_, shader_ ) = ccall((:CG_DrawNewTeamInfo, lib), Void, ( Ptr{rectDef_t}, Float32, Float32, Float32, vec4_t, qhandle_t,  ), rect_, text_x_, text_y_, scale_, color_, shader_ );
CG_DrawTeamSpectators( rect_, scale_, color_, shader_ ) = ccall((:CG_DrawTeamSpectators, lib), Void, ( Ptr{rectDef_t}, Float32, vec4_t, qhandle_t,  ), rect_, scale_, color_, shader_ );
CG_DrawMedal( ownerDraw_, rect_, scale_, color_, shader_ ) = ccall((:CG_DrawMedal, lib), Void, ( Int32, Ptr{rectDef_t}, Float32, vec4_t, qhandle_t,  ), ownerDraw_, rect_, scale_, color_, shader_ );
CG_OwnerDraw( x_, y_, w_, h_, text_x_, text_y_, ownerDraw_, ownerDrawFlags_, align_, special_, scale_, color_, shader_, textStyle_, font_ ) = ccall((:CG_OwnerDraw, lib), Void, ( Float32, Float32, Float32, Float32, Float32, Float32, Int32, Int32, Int32, Float32, Float32, vec4_t, qhandle_t, Int32, Int32,  ), x_, y_, w_, h_, text_x_, text_y_, ownerDraw_, ownerDrawFlags_, align_, special_, scale_, color_, shader_, textStyle_, font_ );
CG_MouseEvent( x_, y_ ) = ccall((:CG_MouseEvent, lib), Void, ( Int32, Int32,  ), x_, y_ );
CG_HideTeamMenu() = ccall((:CG_HideTeamMenu, lib), Void, (),  );
CG_ShowTeamMenu() = ccall((:CG_ShowTeamMenu, lib), Void, (),  );
CG_EventHandling( type_ ) = ccall((:CG_EventHandling, lib), Void, ( Int32,  ), type_ );
CG_KeyEvent( key_, down_ ) = ccall((:CG_KeyEvent, lib), Void, ( Int32, qboolean,  ), key_, down_ );
CG_ClientNumFromName( p_ ) = ccall((:CG_ClientNumFromName, lib), Int32, ( Ptr{Char},  ), p_ );
CG_ShowResponseHead() = ccall((:CG_ShowResponseHead, lib), Void, (),  );
CG_RunMenuScript( args_ ) = ccall((:CG_RunMenuScript, lib), Void, ( Ptr{Ptr{Char}},  ), args_ );
CG_DeferMenuScript( args_ ) = ccall((:CG_DeferMenuScript, lib), qboolean, ( Ptr{Ptr{Char}},  ), args_ );
CG_GetTeamColor( color_ ) = ccall((:CG_GetTeamColor, lib), Void, ( Ptr{vec4_t},  ), color_ );

G_SpawnString( key_, defaultString_, out_ ) = ccall((:G_SpawnString, lib), qboolean, ( Ptr{Char}, Ptr{Char}, Ptr{Ptr{Char}},  ), key_, defaultString_, out_ );
G_SpawnFloat( key_, defaultString_, out_ ) = ccall((:G_SpawnFloat, lib), qboolean, ( Ptr{Char}, Ptr{Char}, Ptr{Float32},  ), key_, defaultString_, out_ );
G_SpawnInt( key_, defaultString_, out_ ) = ccall((:G_SpawnInt, lib), qboolean, ( Ptr{Char}, Ptr{Char}, Ptr{Int32},  ), key_, defaultString_, out_ );
G_SpawnVector( key_, defaultString_, out_ ) = ccall((:G_SpawnVector, lib), qboolean, ( Ptr{Char}, Ptr{Char}, Ptr{Float32},  ), key_, defaultString_, out_ );
G_SpawnBoolean( key_, defaultString_, out_ ) = ccall((:G_SpawnBoolean, lib), qboolean, ( Ptr{Char}, Ptr{Char}, Ptr{qboolean},  ), key_, defaultString_, out_ );
SP_item_botroam( ent_ ) = ccall((:SP_item_botroam, lib), Void, ( Ptr{gentity_t},  ), ent_ );
SP_gametype_item( ent_ ) = ccall((:SP_gametype_item, lib), Void, ( Ptr{gentity_t},  ), ent_ );
spawncmp( a_, b_ ) = ccall((:spawncmp, lib), Int32, ( Ptr{Void}, Ptr{Void},  ), a_, b_ );
G_CallSpawn( ent_ ) = ccall((:G_CallSpawn, lib), qboolean, ( Ptr{gentity_t},  ), ent_ );
G_NewString( string_ ) = ccall((:G_NewString, lib), Char, ( Ptr{Char},  ), string_ );
G_NewString_Safe( string_ ) = ccall((:G_NewString_Safe, lib), Char, ( Ptr{Char},  ), string_ );
fieldcmp( a_, b_ ) = ccall((:fieldcmp, lib), Int32, ( Ptr{Void}, Ptr{Void},  ), a_, b_ );
G_ParseField( key_, value_, ent_ ) = ccall((:G_ParseField, lib), Void, ( Ptr{Char}, Ptr{Char}, Ptr{gentity_t},  ), key_, value_, ent_ );
G_AdjustAreaportal( ent_ ) = ccall((:G_AdjustAreaportal, lib), Void, ( Ptr{gentity_t},  ), ent_ );
G_SpawnGEntityFromSpawnVars( inSubBSP_ ) = ccall((:G_SpawnGEntityFromSpawnVars, lib), Void, ( qboolean,  ), inSubBSP_ );
G_AddSpawnVarToken( string_ ) = ccall((:G_AddSpawnVarToken, lib), Char, ( Ptr{Char},  ), string_ );
AddSpawnField( field_, value_ ) = ccall((:AddSpawnField, lib), Void, ( Ptr{Char}, Ptr{Char},  ), field_, value_ );
HandleEntityAdjustment() = ccall((:HandleEntityAdjustment, lib), Void, (),  );
G_ParseSpawnVars( inSubBSP_ ) = ccall((:G_ParseSpawnVars, lib), qboolean, ( qboolean,  ), inSubBSP_ );
SP_worldspawn() = ccall((:SP_worldspawn, lib), Void, (),  );
SP_bsp_worldspawn() = ccall((:SP_bsp_worldspawn, lib), qboolean, (),  );
G_PrecacheSoundsets() = ccall((:G_PrecacheSoundsets, lib), Void, (),  );
G_LinkLocations() = ccall((:G_LinkLocations, lib), Void, (),  );
G_SpawnEntitiesFromString( inSubBSP_ ) = ccall((:G_SpawnEntitiesFromString, lib), Void, ( qboolean,  ), inSubBSP_ );

/* This file was automatically generated.  Do not edit! */
CCALL void CG_DrawActiveFrame(int serverTime,stereoFrame_t stereoView,qboolean demoPlayback);
void CG_ActualLoadDeferredPlayers(void);
extern qboolean cgQueueLoad;
qboolean PM_InKnockDown(playerState_t *ps);
void BG_VehicleTurnRateForSpeed(Vehicle_t *pVeh,float speed,float *mPitchOverride,float *mYawOverride);
extern float cg_linearFogOverride;
qboolean CG_CullPointAndRadius(const vec3_t pt,float radius);
qboolean CG_CullPoint(vec3_t pt);
void CG_SetupFrustum(void);
void CG_DrawAutoMap(void);
extern int cg_autoMapInputTime;
extern autoMapInput_t cg_autoMapInput;
extern vec3_t cg_autoMapAngle;
extern float cg_autoMapZoomMainOffset;
extern float cg_autoMapZoom;
void CG_AddRadarAutomapEnts(void);
int BG_EmplacedView(vec3_t baseAngles,vec3_t angles,float *newYaw,float constraint);
void CGCam_SetMusicMult(float multiplier,int duration);
void CG_DoCameraShake(vec3_t origin,float intensity,int radius,int time);
void CGCam_Shake(float intensity,int duration);
void CG_CalcScreenEffects(void);
void CG_SE_UpdateMusic(void);
void CG_SE_UpdateShake(vec3_t origin,vec3_t angles);
extern cgscreffects_t cgScreenEffects;
void CG_UpdateSoundTrackers();
void CG_AddBufferedSound(sfxHandle_t sfx);
void CG_DrawSkyBoxPortal(const char *cstr);
extern qboolean cg_noFogOutsidePortal;
extern float cg_skyOriScale;
extern vec3_t cg_skyOriPos;
extern qboolean cg_skyOri;
void CG_EmplacedView(vec3_t angles);
void CG_EmplacedView(vec3_t angles);
qboolean CG_CheckPassengerTurretView(void);
extern vec3_t cg_lastTurretViewAngles;
extern vec3_t cg_actionCamLastPos;
extern int cg_actionCamLastTime;
extern float zoomFov;
void CG_GetVehicleCamPos(vec3_t camPos);
qboolean BG_UnrestrainedPitchRoll(playerState_t *ps,Vehicle_t *pVeh);
void CG_CalcEntityLerpPositions(centity_t *cent);
extern vec3_t gCGFallVector;
extern qboolean gCGHasFallVector;
extern float cameraStiffFactor;
extern float cameraLastYaw;
extern int cameraLastFrame;
extern vec3_t cameraOldLoc;
extern vec3_t cameraCurTarget;
extern vec3_t cameraIdealTarget,cameraIdealLoc;
extern vec3_t cameraFocusAngles,cameraFocusLoc;
extern vec3_t camerafwd,cameraup;
void CG_TestModelPrevSkin_f(void);
void CG_TestModelNextSkin_f(void);
void CG_TestModelPrevFrame_f(void);
void CG_TestModelNextFrame_f(void);
void CG_TestGun_f(void);
void CG_TestModel_f(void);

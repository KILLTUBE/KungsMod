/* This file was automatically generated.  Do not edit! */
void CG_CheckPlayerG2Weapons(playerState_t *ps,centity_t *cent);
void CG_CopyG2WeaponInstance(centity_t *cent,int weaponNum,void *toGhoul2);
void *CG_G2WeaponInstance(centity_t *cent,int weapon);
void CG_ShutDownG2Weapons(void);
void CG_InitG2Weapons(void);
qboolean CG_CalcMuzzlePoint(int entityNum,vec3_t muzzle);
void CG_MissileHitPlayer(int weapon,vec3_t origin,vec3_t dir,int entityNum,qboolean altFire);
void CG_MissileHitWall(int weapon,int clientNum,vec3_t origin,vec3_t dir,impactSound_t soundType,qboolean altFire,int charge);
qboolean CG_VehicleWeaponImpact(centity_t *cent);
void CG_FireWeapon(centity_t *cent,qboolean altFire);
void CG_GetClientWeaponMuzzleBoltPoint(int clIndex,vec3_t to);
void CG_OutOfAmmoChange(int oldWeapon);
void CG_WeaponClean_f(void);
void CG_Weapon_f(void);
void CG_PrevWeapon_f(void);
void CG_NextWeapon_f(void);
void CG_DrawWeaponSelect(void);
qboolean CG_WeaponCheck(int weap);
void CG_DrawIconBackground(void);
void CG_AddViewWeapon(playerState_t *ps);
void CG_AddPlayerWeapon(refEntity_t *parent,playerState_t *ps,centity_t *cent,int team,vec3_t newAngles,qboolean thirdPerson);
void CG_RegisterItemVisuals(int itemNum);
void CG_SetGhoul2InfoRef(refEntity_t *ent,refEntity_t *s1);
